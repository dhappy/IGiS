{"version":3,"sources":["ENSReverse/index.jsx","Mailvelope/index.jsx","Home/index.jsx","SSLHostCheck.jsx","TreeDiff/index.jsx","MAM/index.jsx","ETHSig/index.jsx","AvionDB/index.jsx","Commits/index.jsx","App.jsx","serviceWorker.js","index.js","util.js","Diff/index.jsx","Diff/Line.jsx","Repository/index.jsx","IPFSContext.jsx","Ed25519/index.jsx"],"names":["ethereum","window","web3","Web3","logger","css","args","splice","console","log","apply","namehash","name","node","labels","split","i","length","utils","sha3","slice","encoding","toString","NET","Ropsten","ens","resolve","mainnet","Rinkeby","ensAbi","constant","inputs","type","outputs","payable","anonymous","publicResolverAbi","onboarding","MetamaskOnboarding","useState","setName","tld","setTLD","self","net","rev","reg","revReg","owner","revOwn","revLook","titles","addrs","setAddrs","tracts","setTracts","updateAddr","key","val","as","netSet","parseInt","networkVersion","Object","assign","on","accts","handlers","func","startOnboarding","if","isMetaMaskInstalled","stopOnboarding","err","a","enable","addr","substr","eth","Contract","methods","call","resolverEthAddress","publicResolver","revRes","register","send","from","setResolver","claim","id","style","display","value","onChange","evt","target","entries","map","title","flexDirection","h","onClick","disabled","mailvelope","setMailvelope","keyring","setKeyring","useEffect","undefined","addEventListener","getKeyring","then","catch","createKeyring","fetch","response","blob","Promise","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","setLogo","error","createKeyGenContainer","createEditorContainer","predefinedText","editor","encrypt","href","to","document","location","protocol","hostname","useContext","IPFSContext","ipfs","commit","setCommit","parent","setParent","files","setFiles","dag","get","parents","all","ls","tree","pTree","cTree","diffs","cid","pEntry","find","e","push","Diff","filename","genSeed","seed","tag","setTag","root","setRoot","createChannel","channelState","setChannelState","composeAPI","provider","api","createMAM","debug","mamMessage","createMessage","mamAttach","transactions","info","fetchMAM","mamFetch","fetched","mamFetchAll","chunk","msg","setMsg","msgParams","signMsg","utf8ToHex","personal","sign","sig","ecRecover","signer","getAccounts","accounts","iota","repoAnnounceAddr","useParams","repos","setRepos","AvionDB","init","aviondb","listDatabases","initCollection","collection","findTransactionObjects","addresses","transaction","message","signatureMessageFragment","replace","trytesToAscii","insertOne","_id","r","setCID","refs","setRefs","setFrom","setTo","res","git","serialize","obj","path","codec","keys","Input","className","FormControl","InputLabel","Select","MenuItem","component","ENSReverse","Mailvelope","SSLHostCheck","TreeDiff","MAM","ETHSig","Ed25519","Repo","Commits","exact","Home","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","chars","randomValues","Uint32Array","Array","crypto","getRandomValues","cursor","join","isBinary","str","test","ipfsURL","props","lines","setLines","status","setStatus","diffLines","line","patch","shift","lCnt","rCnt","lQue","rQue","forEach","startsWith","substring","groups","lno","rno","start","left","right","changes","part","added","removed","lNum","rNum","chunks","cat","Buffer","concat","num","text","TabPane","Tabs","TextArea","showComment","setShowComment","comment","setComment","writeComment","holder","reduce","step","Math","random","s","defaultActiveKey","tab","placeholder","autoSize","minRows","source","list","setList","readme","setReadMe","updateList","newList","file","data","icon","size","dataSource","columns","dataIndex","width","showHeader","pagination","onRow","record","rowIndex","onDoubleClick","onContextMenu","event","onMouseEnter","onMouseLeave","createContext","IPFSProvider","setIPFS","IpfsHttpClient","Provider","children","setLog","JSON","stringify","l","jsigs","require","Ed25519KeyPair","generate","keyPair","bs58","pubKey","decode","publicKey","varIntED","multicodec","encode","multiformat","export","keyExport","TRYTE_ALPHABET","bytes","hex","byte","BigInt","address","d","repeat","SECURITY_CONTEXT_URL","controller","publicKeyBase58","authentication","doc","schema","action","agent","publisher","channel","published_at","Date","Ed25519Signature2018","suites","AuthenticationProofPurpose","purposes","documentLoaders","documentLoader","suite","verificationMethod","purpose","challenge","domain","signed","verify","verified","whiteSpace"],"mappings":"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","file":"static/js/main.2511d733.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Web3 from 'web3'\n// To replace window.ethereum:\n// import { initProvider } from '@metamask/inpage-provider'\n// import * as LocalMessageDuplexStream from 'post-message-stream'\nimport MetamaskOnboarding from '@metamask/onboarding'\nimport './index.css'\nimport { Input, Button } from 'antd'\n\nconst { ethereum } = window\nconst web3 = new Web3(ethereum)\n\nconst logger = (css) => ((...args) => {\n  args[0] = `%c ${args[0]} `\n  args.splice(1, 0, css)\n  console.log.apply(this, args)\n})\n\nconst namehash = (name) => {\n  let node = '0x0000000000000000000000000000000000000000000000000000000000000000'\n  if(name !== '') {\n    const labels = name.split(\".\")\n    for(let i = labels.length - 1; i >= 0; i--) {\n      node = web3.utils.sha3(node + web3.utils.sha3(labels[i]).slice(2), { encoding: 'hex' })\n    }\n  }\n  return node.toString()\n}\n\nconst NET = {\n  Ropsten: {\n    ens: '0x112234455c3a32fd11230c42e7bccd4a84e02010',\n    resolve: '0x4c641fb9bad9b60ef180c31f56051ce826d21a9a',\n  },\n  mainnet: {\n    ens: '0x314159265dd8dbb310642f98f50c066173c1259b',\n    resolve: '0xe7410170f87102df0055eb195163a03b7f2bff4a',\n  },\n  Rinkeby: {\n    ens: '0xe7410170f87102df0055eb195163a03b7f2bff4a'\n  },\n}\n\nconst ensAbi = [\n  {name: 'resolver', constant: true, inputs: [{name: 'node', type: 'bytes32'}], outputs: [{name: '', type: 'address'}], payable: false, type: 'function'},\n  {name: 'owner', constant: true, inputs: [{name: 'node', type: 'bytes32'}], outputs:[{name: '', type: 'address'}], payable: false, type: 'function'},\n  {name: 'setSubnodeOwner', constant: false,inputs: [{name: 'node', type: 'bytes32'}, {name: \"label\",type: \"bytes32\"}, {name: \"owner\",type: \"address\"}], outputs: [], payable: false, type: \"function\"},\n  {name: \"setTTL\", constant: false, inputs:[{name: \"node\",type: \"bytes32\"}, {name:\"ttl\",\"type\":\"uint64\"}], outputs:[], payable: false, \"type\":\"function\"},\n  {name: \"ttl\", constant: true,inputs: [{\"name\":\"node\",\"type\":\"bytes32\"}],outputs: [{\"name\":\"\",\"type\":\"uint64\"}],payable: false,type:\"function\"},\n  {name: \"setResolver\", constant:false,inputs:[{\"name\":\"node\",\"type\":\"bytes32\"},{name:\"resolver\",\"type\":\"address\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {name: \"setOwner\", constant:false,inputs:[{\"name\":\"node\",\"type\":\"bytes32\"},{name:\"owner\",\"type\":\"address\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {name: \"Transfer\",type:\"event\",anonymous:false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",type:\"bytes32\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}]},\n  {name: \"NewOwner\",type:\"event\", anonymous:false,inputs: [{\"indexed\":true,\"name\":\"node\",type:\"bytes32\"},{\"indexed\":true,\"name\":\"label\",\"type\":\"bytes32\"},{\"indexed\":false,name:\"owner\",\"type\":\"address\"}]},\n  {name: \"NewResolver\", type:\"event\", anonymous:false,inputs:[{\"indexed\":true,\"name\":\"node\",type:\"bytes32\"},{\"indexed\":false,\"name\":\"resolver\",\"type\":\"address\"}]},\n  {name: \"NewTTL\",type: \"event\", anonymous: false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",type:\"bytes32\"},{\"indexed\":false,\"name\":\"ttl\",\"type\":\"uint64\"}]}\n]\n\nconst registrarAbi = [\n  {name: \"ens\", constant: true, inputs: [],outputs:[{name:\"\",type:\"address\"}],payable:false,type:\"function\"},\n  {name: \"expiryTimes\", constant: true, inputs: [{name:\"\",type:\"bytes32\"}],outputs:[{name:\"\",type:\"uint256\"}],payable:false,type:\"function\"},\n  {name: \"register\", constant:false,inputs:[{name:\"subnode\",type:\"bytes32\"},{name:\"owner\",type:\"address\"}],outputs:[],payable:false,type:\"function\"},\n  {name: \"rootNode\",constant: true, inputs:[], outputs:[{name:\"\",type:\"bytes32\"}],payable:false,type:\"function\"},\n  {type: \"constructor\", inputs:[{name:\"ensAddr\",type:\"address\"},{name:\"node\",type:\"bytes32\"}]}\n]\n\nconst publicResolverAbi = [\n  {\"name\":\"supportsInterface\",\"constant\":true,\"inputs\":[{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"ABI\",\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"contentType\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"setPubkey\",\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"content\",\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"outputs\":[{\"name\":\"ret\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"addr\",\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"outputs\":[{\"name\":\"ret\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"setABI\",\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"contentType\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"name\",\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"outputs\":[{\"name\":\"ret\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"setName\",\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"string\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"setContent\",\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"pubkey\",\"constant\":true,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"outputs\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"setAddr\",\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"bytes32\"},{\"name\":\"addr\",\"type\":\"address\"}],\"outputs\":[],\"payable\":false,\"type\":\"function\"},\n  {\"type\":\"constructor\",\"inputs\":[{\"name\":\"ensAddr\",\"type\":\"address\"}],\"payable\":false},\n  {\"name\":\"AddrChanged\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"}]},\n  {\"name\":\"ContentChanged\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"}]},\n  {\"name\":\"NameChanged\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}]},\n  {\"name\":\"ABIChanged\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"contentType\",\"type\":\"uint256\"}]},\n  {\"name\":\"PubkeyChanged\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"bytes32\"}]}\n]\n\nconst reverseRegistrarAbi = [\n  {\"name\":\"claimWithResolver\",\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"resolver\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"claim\",\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"ens\",\"constant\":true,\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"defaultResolver\",\"constant\":true,\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"node\",\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"ret\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},\n  {\"name\":\"setName\",\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"outputs\":[{\"name\":\"node\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},\n  {\"type\":\"constructor\",\"inputs\":[{\"name\":\"ensAddr\",\"type\":\"address\"},{\"name\":\"resolverAddr\",\"type\":\"address\"}],\"payable\":false}\n]\n\nexport default () => {\n  // const metamaskStream = new LocalMessageDuplexStream({\n  //   name: 'inpage', target: 'contentscript',\n  // })\n  // const ethereum = initProvider({ connectionStream: metamaskStream })\n  const onboarding = new MetamaskOnboarding()\n  const [name, setName] = useState('dhappy') //useState(\"Are there /'s Allowed? 🐳\")\n  const [tld, setTLD] = useState('eth') // eth\n  const [titles, setTitles] = useState({\n    self: 'Your Address',\n    net: 'Current Network',\n    rev: 'Reverse Address',\n    ens: 'ENS Address',\n    reg: 'Registrar Address',\n    revReg: 'Reverse Registrar Address',\n    owner: () => ({ toString: () => `${name}.${tld} Owner` }),\n    revOwn: `Reverse Lookup Owner`,\n    resolve: 'Resolver Address',\n    revLook: 'Reverse Lookup',\n  })\n  const [addrs, setAddrs] = useState({})\n  const [tracts, setTracts] = useState({})\n\n  const updateAddr = (key, val) => {\n    setAddrs(as => ({ ...as, [key]: val }))\n  }\n\n  const netSet = () => {\n    const net = (() => {\n      switch(parseInt(ethereum.networkVersion)) {\n        case 1: return 'mainnet'\n        case 2: return 'Morden'\n        case 3: return 'Ropsten'\n        case 4: return 'Rinkeby'\n        case 42: return 'Kovan'\n        default: return `unknown (id:${ethereum.networkVersion})`\n      }\n    })()\n    updateAddr('net', net)\n    console.log(Object.assign({}, NET[net]))\n    setAddrs(as => Object.assign({}, as, NET[net]))\n  }\n  ethereum.on('networkChanged', () => {\n    setAddrs({}); setTracts({})\n  })\n  ethereum.on('accountsChanged', (accts) => updateAddr('self', accts[0]))\n\n  const handlers = [\n    {\n      name: 'Install MetaMask',\n      func: () => onboarding.startOnboarding(),\n      if: () => !MetamaskOnboarding.isMetaMaskInstalled(),\n    },\n    {\n      name: 'Stop Onboarding',\n      func: () => { try { onboarding.stopOnboarding() } catch(err) { /*console.warn(err)*/ } },\n      if: () => !MetamaskOnboarding.isMetaMaskInstalled(),\n    },\n    {\n      name: 'Enable Ethereum on this Site',\n      func: async () => {\n        const log = logger('color: purple')\n        log('Enabling Inpage Provider')\n        const addr = (await window.ethereum.enable())[0]\n        updateAddr('self', addr)\n        log('Wallet Address', addr)\n      },\n      if: () => !addrs.self,\n    },\n    {\n      name: 'Load Addresses',\n      func: async () => {\n        const log = logger('color: orange; background-color: purple')\n\n        log('Setting addrs.net')\n        netSet()\n\n        log('Adding Reverse Address')\n        updateAddr('rev', addrs.self.substr(2) + '.addr.reverse')\n      },\n      if: () => !!addrs.self && !addrs.net,\n    },\n    {\n      name: 'Load Contracts',\n      func: async () => {\n        const log = logger('color: lightgray; background-color: black')\n\n        const ens = new web3.eth.Contract(ensAbi, addrs.ens)\n\n        log('Looking Up Owner of resolver.eth')\n        const resolverEthAddress = await ens.methods.owner(namehash('resolver.eth')).call()\n        updateAddr('resEth')\n        log('Owner', resolverEthAddress)\n\n        const publicResolver = new web3.eth.Contract(publicResolverAbi, resolverEthAddress)\n        let name = await publicResolver.methods.name(namehash(addrs.rev)).call()\n        log('name', name, addrs.rev)\n        // updateAddr('revLook', name)\n\n        // log(`Looking Up Owner of ${tld}`)\n        // const registrarAddress = await ens.methods.owner(namehash(tld)).call()\n        // updateAddr('reg', registrarAddress)\n        // log('Owner', registrarAddress)\n  \n        // log('Creating ENS and Regisrtar Contracts')\n        // const registrar = new web3.eth.Contract(registrarAbi, registrarAddress)\n        // log('Contracts Completed', `ens:${ens}`, `reg:${registrar}`)\n  \n        // log(`Looking Up Owner of addr.reverse`)\n        // const reverseRegistarAddr = await ens.methods.owner(namehash('addr.reverse')).call()\n        // updateAddr('revReg', reverseRegistarAddr)\n        // log('Owner', reverseRegistarAddr)\n  \n        // log(`Creating a Reverse Resolver (${addrs.rev})`)\n        // const reverseResolverAddr = await ens.methods.resolver(namehash(addrs.rev)).call()\n        // log(reverseResolverAddr) // null\n        // const reverseResolver = new web3.eth.Contract(publicResolverAbi, reverseResolverAddr)\n        // // let name = await reverseResolver.methods.name(namehash(addrs.rev)).call()\n        // // updateAddr('revLook', name)\n        // // console.log('Got Reverse Lookup', name)\n  \n        // log(`Looking Up Owner of ${addrs.rev}`)\n        // let owner = await ens.methods.owner(namehash(addrs.rev)).call()\n        // updateAddr('revOwn', owner)\n        // log('Owner', owner)\n  \n        // log(`Looking Up Owner of ${name}.${tld}`)\n        // owner = await ens.methods.owner(namehash(`${name}.${tld}`)).call()\n        // updateAddr('owner', owner)\n        // log('Owner', owner)\n  \n        // log('Creating ENS and Regisrtar Contracts')\n        // const registrar = new web3.eth.Contract(registrarAbi, registrarAddress)\n        // log('Contracts Completed', `ens:${ens}`, `reg:${registrar}`)\n\n        // log(`Looking Up Owner of ${tld}`)\n        // const registrarAddress = await ens.methods.owner(namehash(tld)).call()\n        // updateAddr('reg', registrarAddress)\n        // log('Owner', registrarAddress)\n\n        // log('Creating ENS and Regisrtar Contracts')\n        // const registrar = new web3.eth.Contract(registrarAbi, registrarAddress)\n        // log('Contracts Completed', `ens:${ens}`, `reg:${registrar}`)\n\n        // log(`Looking Up Owner of addr.reverse`)\n        // const reverseRegistarAddr = await ens.methods.owner(namehash('addr.reverse')).call()\n        // updateAddr('revReg', reverseRegistarAddr)\n        // log('Owner', reverseRegistarAddr)\n\n        // log(`Creating a Reverse Resolver (${addrs.rev})`)\n        // const reverseResolverAddr = await ens.methods.resolver(namehash(addrs.rev)).call()\n        // log(reverseResolverAddr) // null\n        // const reverseResolver = new web3.eth.Contract(publicResolverAbi, reverseResolverAddr)\n        // // let name = await reverseResolver.methods.name(namehash(addrs.rev)).call()\n        // // updateAddr('revLook', name)\n        // // console.log('Got Reverse Lookup', name)\n\n        // log(`Looking Up Owner of ${addrs.rev}`)\n        // let owner = await ens.methods.owner(namehash(addrs.rev)).call()\n        // updateAddr('revOwn', owner)\n        // log('Owner', owner)\n\n        // log(`Looking Up Owner of ${name}.${tld}`)\n        // owner = await ens.methods.owner(namehash(`${name}.${tld}`)).call()\n        // updateAddr('owner', owner)\n        // log('Owner', owner)\n\n        // log('Caching Contracts')\n        // const reverseRegistrar = new web3.eth.Contract(reverseRegistrarAbi, reverseRegistarAddr)\n        // const tracts = { reg: registrar, ens: ens, revRes: reverseResolver, revReg: reverseRegistrar }\n        // console.log(tracts)\n        // setTracts(t => Object.assign({}, t, tracts))\n        // log('Done')\n      },\n      if: () => !!addrs.net && !tracts.revRes,\n    },\n    {\n      name: `Register: ${name}.${tld}`,\n      func: async () => {\n        if(addrs.owner != addrs.self) {\n          await tracts.reg.methods.register(web3.utils.sha3(name), addrs.self).send({ from: addrs.self })\n          let owner = await tracts.ens.methods.owner(namehash(`${name}.${tld}`)).call()\n          updateAddr('owner', owner)\n        }\n      },\n      if: () => addrs.owner != addrs.self,\n    },\n    {\n      name: 'Set a Resolver for the New Domain',\n      func: async () => {\n        await tracts.ens.methods.setResolver(namehash(`${name}.${tld}`), addrs.resolve).send({ from: addrs.self })\n      },\n      if: () => !!tracts.ens && !!addrs.resolve,\n    },\n    {\n      name: 'Claim the Reverse Address',\n      func: async () => {\n        console.log(tracts)\n        if(addrs.revOwn !== addrs.self) {\n          await tracts.revReg.methods.claim(addrs.self).send({ from: addrs.self })\n          const owner = await tracts.ens.methods.owner(namehash(addrs.rev)).call()\n          updateAddr('revOwn', owner)\n        }\n      },\n      if: () => true || !!addrs.rev && !!tracts.revReg\n    },\n    {\n      name: 'Set Resolver and Link Reverse Name',\n      func: async () => {\n        if(addrs.revLook !== `${name}.${tld}`) {\n          const node = await tracts.revReg.methods.setName(`${name}.${tld}`).send({ from: addrs.self })\n          const revLook = await tracts.revRes.methods.name(namehash(addrs.rev)).call()\n          updateAddr('revLook', revLook)\n        }\n      },\n      if: () => !!tracts.ens && !!tracts.revReg\n    }\n  ]\n\n  return (\n    <div id=''>\n      <div id='config' style={{display: 'flex'}}>\n        <Input value={name} onChange={evt => setName(evt.target.value)}/>\n        <Input value={tld} onChange={evt => setTLD(evt.target.value)}/>\n      </div>\n      <div id='steps'>\n        <ul id='data'>\n          {Object.entries(titles).map(([key, title], i) => (\n            <li key={i}><div>{title.call ? title.call(this).toString() : title}</div><div>{addrs[key]}</div></li>\n          ))}\n        </ul>\n        <div id='buttons' style={{display: 'flex', flexDirection: 'column'}}>\n          {handlers.map((h, i) => (\n            <button key={i} onClick={h.func} disabled={h.if ? !h.if() : false}>{h.name}</button>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n  // // web3.personal.sign(\n  // //   web3.fromUtf8(\"Howdy-Ho!\"),\n  // //   web3.eth.coinbase,\n  // //   (err, sig) => (err ? console.error(err) : console.log(sig))\n  // // )\n\n  // // ABIs from https://github.com/ensdomains/ens-manager/blob/master/src/api/ens.js\n}","import React, { useState, useEffect } from 'react'\nimport { Input } from 'antd'\nimport './index.scss'\n\nexport default () => {\n  const [mailvelope, setMailvelope] = useState()\n  const [keyring, setKeyring] = useState()\n\n  useEffect(() => {\n    if(window.mailvelope !== undefined) {\n      setMailvelope(window.mailvelope)\n    } else {\n      window.addEventListener('mailvelope', () => { console.log('HK'); setMailvelope(window.mailvelope) }, false)\n    }\n  }, [])\n\n  //https://stackoverflow.com/a/20285053/264008\n  const toDataURL = url => fetch(url)\n  .then(response => response.blob())\n  .then(blob => new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onloadend = () => resolve(reader.result)\n    reader.onerror = reject\n    return reader.readAsDataURL(blob)\n  }))\n\n  useEffect(() => {\n    if(mailvelope) {\n      mailvelope.getKeyring('IGiS')\n      .then(setKeyring)\n      .catch(async (err) => { // Doesn't exist. Create.\n        try {\n          const keyring = await mailvelope.createKeyring('IGiS')\n          keyring.setLogo(await toDataURL('logo.png'), 1)\n          setKeyring(keyring)\n        } catch(err) {\n          console.error(err)// KEYRING_ALREADY_EXISTS\n        }\n      })\n    }\n  }, [mailvelope])\n\n  useEffect(() => {\n    if(mailvelope && keyring) {\n      // mailvelope.createSettingsContainer('#settings', keyring, {email: 'dys@dhappy.org', fullName: 'John Smith'})\n      // .then(function(result) {\n      //   console.log('mailvelope.createSettingsContainer() success', result);\n      // })\n      // .catch(function(error) {\n      //   console.log('mailvelope.createSettingsContainer() error', error);\n      // })\n      keyring.createKeyGenContainer('#keygen', {})\n      .then(console.log)\n\n      mailvelope.createEditorContainer('#editor', keyring, {predefinedText: 'Testing'})\n      .then((editor) => {\n        console.log('mailvelope.createEditorContainer() success', editor)\n        editor.encrypt(['dys@dhappy.org']).then(console.log)\n      })\n      .catch(function(error) {\n        console.log('mailvelope.createEditorContainer() error', error);\n      })\n\n      // mailvelope.createEncryptedFormContainer('#form', '<h1>Test</h1')\n      // .then(function(result) {\n      //   console.log('mailvelope.createEncryptedFormContainer() success', result);\n      // })\n      // .catch(function(error) {\n      //   console.log('mailvelope.createEncryptedFormContainer() error', error);\n      // })\n    }\n  }, [mailvelope, keyring])\n\n  return <div>\n    { mailvelope ? 'OK' : <h1><a href='//mailvelope.com'>Install Mailvelope</a> or add this site to trusted hosts</h1>}\n    <div id='settings'></div>\n    <div id='keygen'></div>\n    <div id='editor'></div>\n    <div id='form'></div>\n  </div>\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default () => {\n  return (\n    <ul>\n      <li><Link to='ENSReverse'>Configure an <acronym title=''></acronym>ENS reverse address</Link></li>\n      <li><Link to='Mailvelope'>Check Mailvelope characteristics</Link></li>\n      <li><Link to='SSLHostCheck'>Display SSL characteristics</Link></li>\n      <li><Link to='Diff'>View a commentable diff of two trees</Link></li>\n      <li><Link to='MAM'>Send a message to an IOTA MAM channel</Link></li>\n      <li><Link to='ETHSig'>Create an Ethereum signature</Link></li>\n      <li><Link to='Ed25519'>Generate Ed25519 signed <acronym title='Javascript Object Notation Linked Data'>JSON-LD</acronym></Link></li>\n      <li><Link to='AvionDB/'>Basic AvionDB functionality</Link></li>\n      <li><Link to='r/QmZQRtwXA7qLYgUxF4R2TCAzXNnrpddgHGoTCe2fjxNah2'>Sample repository view</Link></li>\n      <li><Link to='commits/QmQiSCYiT15eULshDdQ5Di6KedxzVVmURQeKP79xnjcYy3'>Sample commit tree</Link></li>\n    </ul>\n  )\n}","import React from 'react'\n\nexport default () => (\n  <ul>\n    <li>protocol:{document.location.protocol}</li>\n    <li>location:{document.location.href}</li>\n    <li>hostname:{document.location.hostname}</li>\n  </ul>\n)","import React, { useContext, useState, useEffect } from 'react'\nimport all from 'it-all'\nimport Diff from '../Diff'\nimport IPFSContext from '../IPFSContext'\n\nexport default () => {\n  const [ipfs] = useContext(IPFSContext)\n  const [commit, setCommit] = useState()\n  const [parent, setParent] = useState()\n  const [files, setFiles] = useState()\n  const ref = 'QmddX9QvKJz2YGrQrk4P5ykAZvSUc3jaSjZEDFAfwSqcoF/.git/refs/heads/master'\n\n  useEffect(() => {(async () => {\n    if(ipfs) {\n      setCommit((await ipfs.dag.get(ref)).value)\n      setParent((await ipfs.dag.get(commit.parents[0])).value)\n    }\n  })()}, [ipfs])\n  \n  useEffect(() => {(async () => {\n    if(commit && parent) {\n      const [pTree, cTree] = await Promise.all([\n        all(ipfs.ls(parent.tree)), all(ipfs.ls(commit.tree))\n      ])\n      const diffs = []\n      for(let { type, name, cid } of cTree) {\n        const pEntry = pTree.find(e => e.name === name)\n        if(!pEntry) { // added\n          diffs.push(<Diff filename={name} to={cid}/>)\n        } else if(type !== 'dir' && pEntry.cid.toString() !== cid.toString()) { // changed\n          diffs.push(<Diff filename={name} from={pEntry.cid} to={cid}/>)\n        }\n      }\n      setFiles(diffs)\n    }\n  })()}, [commit, parent])\n\n  return (\n    files\n    ? files\n    : <p>Loading…</p>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { channelRoot, createChannel, createMessage, parseMessage, mamAttach, mamFetch, mamFetchAll } from '@iota/mam.js'\nimport { composeAPI } from '@iota/core'\nimport { asciiToTrytes, trytesToAscii } from '@iota/converter'\nimport { Button, Input } from 'antd'\nimport { genSeed } from '../util'\n\nexport default () => {\n  const [seed] = useState(genSeed())\n  const [tag, setTag] = useState('IGIS9TESTING')\n  const [root, setRoot] = useState()\n  const mode = 'public'\n  const [channelState, setChannelState] = useState(createChannel(seed, 2, mode))\n  //const [api] = useState(composeAPI({ provider: 'https://altnodes.devnet.iota.org:443' }))\n  const [api] = useState(composeAPI({ provider: 'https://nodes.thetangle.org:443' }))\n\n  const createMAM = async () => {\n    console.debug({...channelState})\n\n    // Create a MAM message using the channel state.\n    // The returned mamMessage will contain address, root, nextRoot and payload.\n    // The channel state is also updated, so you should persist it if you want\n    // to add further messages in the same channel.\n    // The payload should be attached to the tangle.\n    const mamMessage = createMessage(channelState, 'MY9MESSAGE');\n    setChannelState(channelState)\n\n    if(!root) {\n      setRoot(mamMessage.root)\n    }\n    console.debug(mamMessage)\n    console.debug({...channelState})\n\n    // // Decode the message using the root and sideKey.\n    // // The decodedMessage will contain nextRoot and message.\n    // const decodedMessage = parseMessage(mamMessage.payload, mamMessage.root, sideKey);\n\n    // And then attach the message, tagging it if required.\n    // Attaching will return the actual transactions attached to the tangle if you need them.\n    const depth = 3\n    const mvw = 14 /* mainnet */ // 9 /* devnet */\n    const transactions = await mamAttach(api, mamMessage, depth, mvw, tag);\n\n    console.info(transactions)\n  }\n\n  const fetchMAM = async () => {\n    // // We can also fetch a message given its root and channel details.\n    // // The fetched data will contain the nextRoot and the message.\n    const fetched = await mamFetch(api, root, mode)\n    console.log(fetched)\n\n    // If you want to fetch multiple messages from a channel\n    // you need either its initial root (or start from another root).\n    //const channelState = createChannel(seed, 2, mode, sideKey);\n    const chunkSize = 4;\n    const chunk = await mamFetchAll(api, root, mode, undefined, chunkSize);\n    console.log(chunk)\n  }\n\n  return [\n    <Input key='in' value={tag} onChange={evt => setTag(evt.target.value)}/>,\n    <Button key='put' onClick={createMAM}>Create</Button>,\n    <Button key='get' onClick={fetchMAM}>Fetch</Button>\n  ]\n}","import React, { useState, useEffect } from 'react'\nimport * as sigUtil from 'eth-sig-util'\nimport Web3 from 'web3'\nconst { ethereum } = window\nconst web3 = new Web3(ethereum)\n\nexport default () => {\n  const [msg, setMsg] = useState('Awaiting Signature…')\n  const msgParams = [\n    {\n      type: 'string',      // Any valid solidity type\n      name: 'Message',     // Any string label you want\n      value: 'Hi, Alice!'  // The value to sign\n    },\n    {   \n      type: 'uint32',\n      name: 'A number',\n      value: '1337'\n    }\n  ]\n\n  const signMsg = async (msgParams, from) => {\n    const msg = web3.utils.utf8ToHex('This is a test…')\n    const sig = await web3.eth.personal.sign(msg, from)\n    const signer = await web3.eth.personal.ecRecover(msg, sig)\n    setMsg(`Signer: ${signer}`)\n  }\n\n  useEffect(() => {\n    ethereum.enable()\n    web3.eth.getAccounts(function (err, accounts) {\n      if (!accounts) return\n      signMsg(msgParams, accounts[0])\n    })\n  }, [])\n\n  return <p>{msg}</p>\n}","import React, { useEffect, useContext, useState } from 'react'\nimport AvionDB from 'aviondb'\nimport IPFSContext from '../IPFSContext'\nimport { useParams } from 'react-router-dom'\nimport { composeAPI } from '@iota/core'\nimport { asciiToTrytes, trytesToAscii } from '@iota/converter'\n\nexport default () => {\n  const [ipfs] = useContext(IPFSContext)\n  const [iota] = useState(composeAPI({ provider: 'https://nodes.thetangle.org:443' }))\n  const repoAnnounceAddr = useParams()[0]\n  const [repos, setRepos] = useState([])\n\n  useEffect(() => {(async () => {\n    if(ipfs) {\n      const aviondb = await AvionDB.init('igis', ipfs)\n\n      console.info(await AvionDB.listDatabases())\n\n      const collection = await aviondb.initCollection('repos')\n\n      for(let transaction of await iota.findTransactionObjects({ addresses: [repoAnnounceAddr] })) {\n        const message = transaction.signatureMessageFragment.replace(/9*$/, '') // how do I know it won't end in 9?\n        const cid = trytesToAscii(message)\n        let name = <em>Untitled</em>\n        try {\n          name = (await ipfs.dag.get(`${cid}/.git/name`)).value\n        } catch(err) { /* DNE */ }\n        await collection.insertOne({\n          _id: cid, cid: cid, name: name\n        })\n      }\n\n      // We also support multi-insert using collection.insert()\n      // See https://github.com/dappkit/aviondb/blob/master/API.md\n\n      // const employee = await collection.find({\n      //   ssn: \"562-48-5384\",\n      // });\n\n      // We also support find(), findById()\n      // See https://github.com/dappkit/aviondb/blob/master/API.md\n      console.info(await collection.find())\n\n      setRepos(await collection.find())\n\n      // Returns the matching document\n      // console.log(employee);\n      // Prints the above added JSON document\n\n      // Update a document\n      // const updatedEmployee = await collection.update(\n      //   { ssn: \"562-48-5384\" },\n      //   { $set: { hourly_pay: \"$100\" } }\n      // )\n\n      // We also support updateMany(), findOneAndUpdate()\n      // See https://github.com/dappkit/aviondb/blob/master/API.md\n\n      // Returns the updated document\n      // console.log(updatedEmployee);\n      // Prints the updated JSON document\n    }\n  })()}, [ipfs, iota])\n    // await collection.close(); // Collection will be closed.\n    // await aviondb.drop(); // Drops the database\n    // await aviondb.close(); // Closes all collections and binding database.\n    // await ipfs.stop();\n  return <ol>\n    {repos.map((r, i) => <li key={i}>{r.name}</li>)}\n  </ol>\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Input, InputLabel, FormControl, Select, MenuItem } from '@material-ui/core'\nimport IPFSContext from '../IPFSContext'\nimport './index.scss'\n\nexport default () => {\n  const [ipfs] = useContext(IPFSContext)\n  const [cid, setCID] = useState(useParams()[0])\n  const [refs, setRefs] = useState({})\n  const [from, setFrom] = useState()\n  const [to, setTo] = useState()\n\n  useEffect(() => {\n    if(ipfs && cid && cid !== '') {\n      ipfs.dag.get(`${cid}/.git`)\n      .then(res => res.value)\n      .then(git => {\n        const refs = {}\n        const serialize = (obj, path) => {\n          if(obj.codec === 'dag-cbor') {\n            refs[path] = obj\n          } else {\n            for(const name of Object.keys(obj)) {\n              serialize(obj[name], `${path}/${name}`)\n            }\n          }\n        }\n        serialize(git.refs, 'refs')\n        console.debug(refs)\n        setRefs(refs)\n      })\n      .catch(console.error)\n    }\n  }, [ipfs, cid])\n\n  // const menu = (\n  //   <Menu>\n  //     {Object.keys(refs).map((r, i) => (\n  //       <Menu.Item key={i}>{r}</Menu.Item>\n  //     ))}\n  //   </Menu>\n  // )\n\n  return (\n    <div id='commits'>\n      <Input className='cid' onChange={(evt) => setCID(evt.target.value)} />\n      <FormControl className='branch'>\n        <InputLabel>To Branch</InputLabel>\n        <Select value={to} onChange={evt => setTo(evt.target.value)}>\n          {Object.keys(refs).map((r, i) => (\n            <MenuItem key={i} value={r}>{r}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <Input className='cid' onChange={(evt) => setCID(evt.target.value)} />\n      <FormControl className='branch'>\n        <InputLabel>From Branch</InputLabel>\n        <Select value={from} onChange={evt => setFrom(evt.target.value)}>\n          {Object.keys(refs).map((r, i) => (\n            <MenuItem key={i} value={r}>{r}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport 'antd/dist/antd.css'\nimport ENSReverse from './ENSReverse'\n//import CheckSig from './CheckSig'\nimport Mailvelope from './Mailvelope'\nimport Repo from './Repository'\nimport Home from './Home'\nimport SSLHostCheck from './SSLHostCheck'\nimport TreeDiff from './TreeDiff'\nimport MAM from './MAM'\nimport ETHSig from './ETHSig'\nimport AvionDB from './AvionDB'\nimport Ed25519 from './Ed25519'\nimport Commits from './Commits'\nimport { IPFSProvider } from './IPFSContext'\n\nexport default () => (\n  <IPFSProvider><Router>\n    <div className='app'>\n      <Route path='/ENSReverse' component={ENSReverse}/>\n      <Route path='/Mailvelope' component={Mailvelope}/>\n      <Route path='/SSLHostCheck' component={SSLHostCheck}/>\n      <Route path='/Diff' component={TreeDiff}/>\n      <Route path='/MAM' component={MAM}/>\n      <Route path='/ETHSig' component={ETHSig}/>\n      <Route path='/Ed25519' component={Ed25519}/>\n      <Route path='/AvionDB/*' component={AvionDB}/>\n      <Route path='/r/*' component={Repo}/>\n      <Route path='/commits/*' component={Commits}/>\n      <Route path='/' exact={true} component={Home} />\n    </div>\n  </Router></IPFSProvider>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const genSeed = (length = 81) => {\n  var chars        = '9ABCDEFGHIJKLMNOPQRSTUVWXYZ'; // The allowed characters in the seed.\n  var randomValues = new Uint32Array(length)        // An empty array to store the random values.\n  var result       = new Array(length)              // An empty array to store the seed characters.\n\n  window.crypto.getRandomValues(randomValues)       // Generate random values and store them to array.\n\n  var cursor = 0                                    // A cursor is introduced to remove modulus bias.\n  for (var i = 0; i < randomValues.length; i++) {   // Loop through each of the 81 random values.\n      cursor += randomValues[i]                     // Add them to the cursor.\n      result[i] = chars[cursor % chars.length]      // Assign a new character to the seed based on cursor mod 81.\n  }\n\n  return result.join('')                            // Merge the array into a single string and return it.\n}","import React, { useState, useEffect, useContext } from 'react'\nimport * as Diff from 'diff'\nimport toBuffer from 'it-to-buffer'\nimport IPFSContext from '../IPFSContext'\nimport Line from './Line'\nimport './index.scss'\n\nconst isBinary = (str) => /[\\x00-\\x09\\x0E-\\x1F]/.test(str)\nconst ipfsURL = (cid) => `//ipfs.io/ipfs/${cid}`\n\nexport default (props) => {\n  const [ipfs] = useContext(IPFSContext)\n  const [lines, setLines] = useState([])\n  const [status, setStatus] = useState()\n\n  const diffLines = (from, to) => {\n    const patch = Diff.createPatch(props.filename, from, to).split(\"\\n\")\n\n    let line\n    do { // skip the header\n      line = patch.shift()\n    } while(!/^={5,}$/.test(line))\n\n    const lines = []\n    let lCnt, rCnt, lName, rName, lQue = [], rQue = []\n    patch.forEach(line => {\n      if(line.startsWith('---')) {\n        rName = line.substring(4)\n      } else if(line.startsWith('+++')) {\n        lName = line.substring(4)\n      } else if(line.startsWith('@@')) {\n        let match\n        if(match = line.match(/@@ -(?<lno>\\d+),(?<lct>\\d+)\\s+\\+(?<rno>\\d+),(?<rct>\\d+) @@/)) {\n          lCnt = match.groups.lno\n          rCnt = match.groups.rno\n          lines.push({ start: line })\n        } else {\n          console.error(`Unrecognized: ${line}`)\n        }\n      } else if(line.startsWith('+')) {\n        rQue.push(line.substring(1))\n      } else if(line.startsWith('-')) {\n        lQue.push(line.substring(1))\n      } else {\n        while(lQue.length > 0 && rQue.length > 0) {\n          let left = lQue.shift(), right = rQue.shift()\n          const changes = Diff.diffWordsWithSpace(left, right)\n          left = []\n          right = []\n          for(let part of changes) {\n            if(part.added) {\n              right.push(<span className='added'>{part.value}</span>)\n            } else if(part.removed) {\n              left.push(<span className='removed'>{part.value}</span>)\n            } else {\n              const val = <span>{part.value}</span>\n              right.push(val)\n              left.push(val)\n            }\n          }\n          lines.push({ type: 'replacement', left: left, right: right, lNum: lCnt++, rNum: rCnt++ })\n        }\n        while(lQue.length) {\n          lines.push({ type: 'left', left: lQue.shift(), lNum: lCnt++ })\n        }\n        while(rQue.length > 0) {\n          lines.push({ type: 'right', right: rQue.shift(), rNum: rCnt++ })\n        }\n        lines.push({ type: 'match', right: line, left: line, lNum: lCnt++, rNum: rCnt++ })\n      }\n    })\n    return lines\n  }\n\n  useEffect(() => {\n    (async () => {\n      if(ipfs) {\n        const [from, to] = await Promise.all(\n          [props.from, props.to]\n          .map(async cid => {\n            if(!cid) {\n              return ''\n            } else {\n              const chunks = []\n              for await (const chunk of ipfs.cat(cid)) {\n                chunks.push(Buffer.from(chunk))\n              }\n              return Buffer.concat(chunks).toString()\n            }\n          })\n        )\n        if(isBinary(from) || isBinary(to)) {\n          if(props.from && props.to) {\n            setStatus(<p>\n              Changed Binary File\n              <a href={ipfsURL(props.from)}>View From</a>\n              <a href={ipfsURL(props.to)}>View To</a>\n            </p>)\n          } else if(props.from) {\n            setStatus(<p>\n              Removed Binary File\n              <a href={ipfsURL(props.from)}>View</a>\n            </p>)\n          } else if(props.to) {\n            setStatus(<p>\n              Added Binary File\n              <a href={ipfsURL(props.to)}>View</a>\n            </p>)\n          }\n        } else {\n          setLines(diffLines(from, to))\n        }\n      }\n    })()\n  }, [ipfs])\n  \n  return <div id='diff'>\n    <h1>{props.filename} {props.from && props.from.toString()}/{props.to && props.to.toString()}</h1>\n\n    <div className='status'>{status}</div>\n\n    <ol>\n      {lines.map(({ start, right, left, rNum, lNum, type }) => {\n        return (\n          start\n          ? <li className='start row'>{start}</li>\n          : <li className={`${type} row`}>\n            <Line num={lNum} text={left} type='left'/>\n            <Line num={rNum} text={right} type='right'/>\n          </li>\n        )\n      })}\n    </ol>\n  </div>\n}","import React, { useState, useContext } from 'react'\nimport { Tabs, Input, Button } from 'antd'\nimport ReactMarkdown from 'react-markdown'\nimport IPFSContext from '../IPFSContext'\nconst { TabPane } = Tabs\nconst { TextArea } = Input\n\nexport default ({ num, text, type, filename }) => {\n  const [ipfs] = useContext(IPFSContext)\n  const [showComment, setShowComment] = useState(false)\n  const [comment, setComment] = useState()\n\n  const writeComment = async () => {\n    //const pr = (await ipfs.dag.get(pr))\n    const pr = {}\n    const holder = ['comments', type].reduce((obj, step) => (\n      obj[step] = obj[step] || {}\n    ), pr)\n    holder[num] = holder[num] || []\n    holder[num].push(comment)\n  }\n\n  return <div className={`line ${type}`} key={`${type}-${num || Math.random()}`}>\n    <a onClick={text ? () => setShowComment(s => !s) : null} title='💬'>\n      <span className='number'>{num}</span>\n      <span className='text'>{text}</span>\n    </a>\n    {showComment && <div className='comment'>\n      <Tabs defaultActiveKey=\"write\">\n        <TabPane tab=\"Write\" key=\"write\">\n          <TextArea\n            placeholder=\"Leave a markdown-formatted comment…\"\n            value={comment}\n            onChange={evt => setComment(evt.target.value)}\n            autoSize={{ minRows: 5 }}\n          />\n        </TabPane>\n        <TabPane tab=\"Preview\" key=\"preview\">\n          <div className='preview'>\n            <ReactMarkdown source={comment}/>\n          </div>\n        </TabPane>\n      </Tabs>\n      <Button className='submit' type='primary' onClick={writeComment}>Comment</Button>\n      <Button onClick={() => setShowComment(false)}>Cancel</Button>\n    </div>}\n  </div>\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport all from 'it-all'\nimport toBuffer from 'it-to-buffer'\nimport { Table } from 'antd'\nimport { FileTwoTone, FolderTwoTone } from '@ant-design/icons'\nimport Markdown from 'react-markdown'\nimport IPFSContext from '../IPFSContext'\nimport './index.scss'\n\nconst logger = (css) => ((...args) => {\n  args[0] = `%c ${args[0]} `\n  args.splice(1, 0, css)\n  console.log.apply(this, args)\n})\n\nexport default () => {\n  const [ipfs] = useContext(IPFSContext)\n  const [cid, setCID] = useState(useParams()[0])\n  const [list, setList] = useState([])\n  const [readme, setReadMe] = useState()\n\n  const updateList = async (newList) => {\n    setList(newList)\n    const readme = newList.find(file => {\n      console.log(file.name, /readme(\\..+)?/i.test(file.name))\n      return /readme(\\..+)?/i.test(file.name)\n    })\n    const chunks = []\n    for await (const chunk of ipfs.cat(readme.cid)) {\n      chunks.push(Buffer.from(chunk))\n    }\n    setReadMe(Buffer.concat(chunks).toString())\n  }\n\n  useEffect(() => {\n    if (ipfs) {\n      all(ipfs.ls(cid)).then(updateList)\n    }\n  }, [ipfs, cid])\n\n  console.log(list)\n\n  const columns = [\n    { title: '', dataIndex: 'icon', key: 'name', width: 50 },\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n  ]\n  const data = list.map((file) => ({\n    name: file.name,\n    icon: file.type === 'file' ? <FileTwoTone key={Math.random()}/> : <FolderTwoTone key={Math.random()}/>,\n  }))\n\n  return (\n    <div id='repo'>\n      {cid ? <h1>{cid}</h1> : ''}\n      <Table size='large' dataSource={data} columns={columns}\n        showHeader={false} pagination={false} onRow={(record, rowIndex) => {\n          return {\n            onClick: evt => logger('color: black')(record.name),\n            onDoubleClick: evt => { window.location = `/r/`},\n            onContextMenu: event => { }, // right button click row\n            onMouseEnter: evt => logger('color: green')('event', evt),\n            onMouseLeave: event => { }, // mouse leave row\n          }\n        }}\n      />\n      <div id='readme'>\n        <Markdown source={readme} />\n      </div>\n    </div>\n  )\n}","import React, { createContext, useState, useEffect } from 'react'\nimport Ipfs from 'ipfs'\nimport IpfsHttpClient from 'ipfs-http-client'\n\nconst IPFSContext = createContext()\n\nexport default IPFSContext\n\nexport const IPFSProvider = (props) => {\n  const [ipfs, setIPFS] = useState()\n\n  useEffect(() => {\n    //window.ipfs.enable({ commands: [] }).then(setIPFS)\n    //Ipfs.create({ repo: 'ipfs-' + Math.random() }).then(setIPFS)\n    setIPFS(IpfsHttpClient('/ip4/127.0.0.1/tcp/5001'))\n\n    // const ipfs = new Ipfs()\n    // ipfs.on('ready', () => setIPFS(ipfs))\n  }, [])\n\n return (\n    <IPFSContext.Provider value={[ipfs, setIPFS]}>\n      {props.children}\n    </IPFSContext.Provider>\n  )\n}","/* global BigInt */\n\nimport React, { useEffect, useState }from 'react'\nimport { genSeed } from '../util'\n\nexport default () => {\n  const [log, setLog] = useState([])\n\n  const logger = (msg) => {\n    if(typeof msg === 'object') {\n      msg = JSON.stringify(msg, null, 2)\n    }\n    setLog(l => [...l, msg])\n  }\n\n  useEffect(() => {(async () => {\n    const jsigs = require('jsonld-signatures')\n    const {Ed25519KeyPair} = require('crypto-ld')\n\n    const keyPair = await Ed25519KeyPair.generate()\n    logger(keyPair)\n\n    const bs58 = require('bs58')\n\n    const pubKey = bs58.decode(keyPair.publicKey)\n    const varIntED = [0xED, 0x01]\n    const multicodec = bs58.encode(Buffer.from([...varIntED, ...pubKey]))\n    const multiformat = 'z' + multicodec\n\n    keyPair.id = `did:key:${multiformat}`\n    const keyExport = await keyPair.export()\n    logger(keyExport)\n\n    const TRYTE_ALPHABET = '9ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n    const bytes = bs58.decode(multicodec)\n    let hex = []\n    bytes.forEach((byte) => {\n      var h = byte.toString(16);\n      if(h.length % 2) { h = '0' + h }\n      hex.push(h)\n    })\n    hex = hex.join('')\n    logger(hex)\n    logger(`hex.length: ${hex.length}`)\n    \n    const key = BigInt('0x' + hex)\n    logger(key.toString())\n    logger(`binary.length: ${key.toString(2).length}`)\n    let address = key.toString(27).split('').map(d => TRYTE_ALPHABET[parseInt(d, 27)]).join('')\n    logger(address)\n    logger(`tryte.length: ${address.length}`) // 58\n\n    address = `IPFS9MAM9CHANNEL9VA99${address}`\n    address = `${'9'.repeat(81 - address.length)}${address}`\n    logger(address)\n\n    // specify the public key object\n    const publicKey = {\n      '@context': jsigs.SECURITY_CONTEXT_URL,\n      type: 'Ed25519VerificationKey2018',\n      id: `${keyExport.id}`, //adding a # to the key id causes a signature verification error\n      controller: `${keyExport.id}#controller`,\n      publicKeyBase58: keyExport.publicKeyBase58,\n    }\n\n    // specify the public key controller object\n    const controller = {\n      '@context': jsigs.SECURITY_CONTEXT_URL,\n      id: publicKey.controller,\n      publicKey: [publicKey],\n      authentication: [publicKey.id],\n    }\n\n    logger(controller)\n\n    // create the JSON-LD document that should be signed\n    const doc = {\n      '@context': {\n        schema: 'http://schema.org/',\n        action: 'schema:action',\n        agent: 'schema:name',\n        publisher: 'schema:url',\n        channel: 'schema:url',\n        published_at: 'schema:datetime',\n      },\n      action: 'RepositoryUpdate',\n      publisher: publicKey.controller,\n      channel: `git:ipfs+mam://${genSeed()}`,\n      agent: 'git-remote-ipfs+mam',\n      published_at: new Date(),\n    }\n\n    logger(doc)\n\n    // sign the document for the purpose of authentication\n    const {Ed25519Signature2018} = jsigs.suites\n    const {AuthenticationProofPurpose} = jsigs.purposes\n    const {documentLoaders} = require('jsonld')\n    // we will need the documentLoader to verify the controller\n    const {node: documentLoader} = documentLoaders\n\n    try {\n      const signed = await jsigs.sign(doc, {\n        suite: new Ed25519Signature2018({\n          verificationMethod: publicKey.id,\n          key: keyPair,\n        }),\n        purpose: new AuthenticationProofPurpose({\n          challenge: '',\n          domain: 'git-remote-ipfs+mam'\n        })\n      })\n\n      logger(signed)\n\n      // verify the signed document\n      const result = await jsigs.verify(signed, {\n        documentLoader,\n        suite: new Ed25519Signature2018({\n          key: keyPair,\n        }),\n        purpose: new AuthenticationProofPurpose({\n          controller,\n          challenge: signed['https://w3id.org/security#proof']['@graph']['https://w3id.org/security#challenge'],\n          domain: signed['https://w3id.org/security#proof']['@graph']['https://w3id.org/security#domain'],\n        })\n      });\n      if(result.verified) {\n        logger('Signature verified.');\n      } else {\n        logger(`Signature verification error: ${result.error}`);\n      }\n    } catch(err) {\n      logger(`Error: ${err.message}`)\n    }\n  })()}, [])\n\n  return (\n    <div>\n      <h1>Signing Test</h1>\n      <ol>\n        {log.map((l, i) => <li key={i} style={{whiteSpace: 'pre'}}>{l}</li>)}\n      </ol>\n    </div>\n  )\n}"],"sourceRoot":""}